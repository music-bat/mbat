{
  "version": 1,
  "projects": {
    "api": {
      "root": "apps/api",
      "sourceRoot": "apps\\api\\src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/webpack:webpack",
          "outputs": [
            "{options.outputPath}"
          ],
          "options": {
            "outputPath": "dist/apps/api",
            "main": "apps/api/src/main.ts",
            "tsConfig": "apps/api/tsconfig.app.json",
            "assets": [
              {
                "glob": "**/*",
                "input": "apps/api/src/parse/views/email",
                "output": "./parse/views/email"
              }
            ],
            "target": "node",
            "compiler": "tsc"
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/api/src/environments/environment.ts",
                  "with": "apps/api/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:node",
          "options": {
            "buildTarget": "api:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/api/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "{workspaceRoot}/coverage/apps/api"
          ],
          "options": {
            "jestConfig": "apps/api/jest.config.ts",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "api-interfaces": {
      "root": "libs/api-interfaces",
      "sourceRoot": "libs/api-interfaces/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/api-interfaces/**/*.ts"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        }
      },
      "tags": []
    },
    "pwa": {
      "projectType": "application",
      "root": "apps/pwa",
      "sourceRoot": "apps/pwa/src",
      "prefix": "mbat",
      "architect": {
        "build": {
          "builder": "@angular-builders/custom-webpack:browser",
          "options": {
            "outputPath": "dist/pwa/browser",
            "index": "apps/pwa/src/index.html",
            "main": "apps/pwa/src/main.ts",
            "polyfills": "apps/pwa/src/polyfills.ts",
            "tsConfig": "apps/pwa/tsconfig.app.json",
            "assets": [
              "apps/pwa/src/assets",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              }
            ],
            "styles": [
              "apps/pwa/src/styles.scss",
              {
                "input": "apps/pwa/src/theme/variables.scss"
              }
            ],
            "scripts": [],
            "vendorChunk": true,
            "extractLicenses": false,
            "buildOptimizer": false,
            "sourceMap": true,
            "optimization": false,
            "namedChunks": true
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/pwa/src/environments/environment.ts",
                  "with": "apps/pwa/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            },
            "dev": {
              "fileReplacements": [
                {
                  "replace": "apps/pwa/src/environments/environment.ts",
                  "with": "apps/pwa/src/environments/environment.dev.ts"
                }
              ]
            }
          },
          "defaultConfiguration": ""
        },
        "serve": {
          "builder": "@angular-builders/custom-webpack:dev-server",
          "options": {
            "browserTarget": "pwa:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "pwa:build:production"
            },
            "dev": {
              "browserTarget": "pwa:build:dev"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-builders/custom-webpack:extract-i18n",
          "options": {
            "browserTarget": "pwa:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/pwa/src/**/*.ts",
              "apps/pwa/src/**/*.html"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": [
            "{workspaceRoot}/coverage/apps/pwa"
          ],
          "options": {
            "jestConfig": "apps/pwa/jest.config.ts",
            "passWithNoTests": true
          }
        },
        "cap": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "--help"
          }
        },
        "add": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "add",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "add ios"
            },
            "android": {
              "cmd": "add android"
            }
          }
        },
        "copy": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "copy",
            "packageInstall": false
          },
          "configurations": {
            "ios": {
              "cmd": "copy ios"
            },
            "android": {
              "cmd": "copy android"
            }
          }
        },
        "open": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "open",
            "packageInstall": false
          },
          "configurations": {
            "ios": {
              "cmd": "open ios"
            },
            "android": {
              "cmd": "open android"
            }
          }
        },
        "sync": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "sync",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "sync ios"
            },
            "android": {
              "cmd": "sync android"
            }
          }
        },
        "update": {
          "builder": "@nxtend/capacitor:cap",
          "options": {
            "cmd": "update",
            "packageInstall": true
          },
          "configurations": {
            "ios": {
              "cmd": "update ios"
            },
            "android": {
              "cmd": "update android"
            }
          }
        },
        "server": {
          "builder": "@angular-builders/custom-webpack:server",
          "options": {
            "outputPath": "dist/pwa/server",
            "main": "apps/pwa/server.ts",
            "tsConfig": "apps/pwa/tsconfig.server.json",
            "optimization": false,
            "sourceMap": true,
            "extractLicenses": false
          },
          "configurations": {
            "production": {
              "outputHashing": "media",
              "fileReplacements": [
                {
                  "replace": "apps/pwa/src/environments/environment.ts",
                  "with": "apps/pwa/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "sourceMap": false,
              "extractLicenses": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve-ssr": {
          "builder": "@nguniversal/builders:ssr-dev-server",
          "configurations": {
            "development": {
              "browserTarget": "pwa:build",
              "serverTarget": "pwa:server"
            },
            "production": {
              "browserTarget": "pwa:build:production",
              "serverTarget": "pwa:server:production"
            }
          },
          "defaultConfiguration": "development"
        },
        "prerender": {
          "builder": "@nguniversal/builders:prerender",
          "options": {
            "routes": [
              "/"
            ]
          },
          "configurations": {
            "production": {
              "browserTarget": "pwa:build:production",
              "serverTarget": "pwa:server:production"
            },
            "development": {
              "browserTarget": "pwa:build:development",
              "serverTarget": "pwa:server:development"
            }
          },
          "defaultConfiguration": "production"
        }
      },
      "tags": []
    },
    "pwa-e2e": {
      "root": "apps/pwa-e2e",
      "sourceRoot": "apps/pwa-e2e/src",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@nrwl/cypress:cypress",
          "options": {
            "cypressConfig": "apps/pwa-e2e/cypress.json",
            "tsConfig": "apps/pwa-e2e/tsconfig.e2e.json",
            "devServerTarget": "pwa:serve"
          },
          "configurations": {
            "production": {
              "devServerTarget": "pwa:serve:production"
            }
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/pwa-e2e/**/*.{js,ts}"
            ]
          },
          "outputs": [
            "{options.outputFile}"
          ]
        }
      },
      "tags": [],
      "implicitDependencies": [
        "pwa"
      ]
    }
  }
}
